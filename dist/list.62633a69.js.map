{"mappings":"ACAA,SAAS,iCAIL,aAAe,AAHQ,MAAM,IAAI,CAAC,YAGJ,GAAG,CAAC,AAAA,GACvB,CAAA,CACH,KAAM,EAAG,OAAO,CAAC,YAAY,CAC7B,SAAU,EAAG,OAAO,CAAC,QAAQ,CAC7B,KAAM,EAAG,OAAO,CAAC,IAAI,CACrB,SAAU,EAAG,OAAO,CAAC,QAAQ,CAC7B,MAAO,EAAG,OAAO,CAAC,OAAO,AAC7B,CAAA,GAGJ,aAAa,OAAO,CAAC,iBAAkB,KAAK,SAAS,CAAC,cAC1D,CAEA,SAAS,mCACL,IAAM,EAAiB,aAAa,OAAO,CAAC,kBAE5C,GAAI,EACA,GAAI,CACA,IAAM,EAAa,KAAK,KAAK,CAAC,EAG9B,CAAA,KAAK,SAAS,CAAG,GACjB,EAAW,OAAO,CAAC,AAAA,IACf,IAAI,EAAW,SAAS,aAAa,CAAC,KACtC,CAAA,EAAS,SAAS,CAAG,sCACrB,EAAS,OAAO,CAAC,IAAI,CAAG,EAAS,IAAI,CAAC,WAAW,GACjD,EAAS,OAAO,CAAC,YAAY,CAAG,EAAS,IAAI,CAC7C,EAAS,OAAO,CAAC,QAAQ,CAAG,EAAS,QAAQ,CAC7C,EAAS,OAAO,CAAC,IAAI,CAAG,EAAS,IAAI,CACrC,EAAS,OAAO,CAAC,QAAQ,CAAG,EAAS,QAAQ,EAAI,QACjD,EAAS,OAAO,CAAC,OAAO,CAAG,EAAS,KAAK,CACzC,KAAK,WAAW,CAAC,EACrB,GACA,mBACJ,CAAE,MAAO,EAAG,CACR,QAAQ,KAAK,CAAC,iDAAkD,GAChE,aAAa,UAAU,CAAC,kBACxB,KAAK,SAAS,CAAG,EACrB,MAEA,QAAQ,GAAG,CAAC,yEACZ,KAAK,SAAS,CAAG,GAAI,CAE7B,CAGA,SAAS,gBAAgB,CAAC,mBAAoB,KACxC,AAA6B,WAA7B,SAAS,eAAe,EAC1B,gCAEJ,GAGA,OAAO,gBAAgB,CAAC,eAAgB,gCAGxC,SAAS,gBAAgB,CAAC,mBAAoB","sources":["<anon>","public/js/list/memory-handle.js"],"sourcesContent":["function saveShoppingListToLocalStorage() {\n    const list_items_dom = Array.from(list_items);\n    // Populate the global shoppingList array from current DOM elements' data attributes\n    shoppingList = list_items_dom.map((li)=>{\n        return {\n            item: li.dataset.originalItem,\n            quantity: li.dataset.quantity,\n            unit: li.dataset.unit,\n            category: li.dataset.category,\n            check: li.dataset.checked\n        };\n    });\n    localStorage.setItem('myShoppingList', JSON.stringify(shoppingList));\n}\nfunction loadShoppingListFromLocalStorage() {\n    const storedListJSON = localStorage.getItem('myShoppingList');\n    if (storedListJSON) try {\n        const storedList = JSON.parse(storedListJSON); // Parse directly into a local variable\n        List.innerHTML = '';\n        storedList.forEach((itemData)=>{\n            let listItem = document.createElement('li');\n            listItem.className = 'list-group-item fs-5 mb-3 rounded-3';\n            listItem.dataset.item = itemData.item.toUpperCase();\n            listItem.dataset.originalItem = itemData.item;\n            listItem.dataset.quantity = itemData.quantity;\n            listItem.dataset.unit = itemData.unit;\n            listItem.dataset.category = itemData.category || 'Other';\n            listItem.dataset.checked = itemData.check; // Ensure boolean is stored as string\n            List.appendChild(listItem);\n        });\n        updateItemNumbers();\n    } catch (e) {\n        console.error('Error parsing shopping list from localStorage:', e);\n        localStorage.removeItem('myShoppingList');\n        List.innerHTML = '';\n    }\n    else {\n        console.log('No shopping list found in local storage. Starting with an empty list.');\n        List.innerHTML = '';\n        y;\n    }\n}\n// Event listener to save the list when the page is about to be unloaded\ndocument.addEventListener('visibilitychange', ()=>{\n    if (document.visibilityState === 'hidden') saveShoppingListToLocalStorage();\n});\n// Fallback\nwindow.addEventListener('beforeunload', saveShoppingListToLocalStorage);\n// Load the shopping list when the DOM content is fully loaded\ndocument.addEventListener('DOMContentLoaded', loadShoppingListFromLocalStorage);\n\n//# sourceMappingURL=list.62633a69.js.map\n","function saveShoppingListToLocalStorage() {\r\n    const list_items_dom = Array.from(list_items);\r\n\r\n    // Populate the global shoppingList array from current DOM elements' data attributes\r\n    shoppingList = list_items_dom.map(li => {\r\n        return {\r\n            item: li.dataset.originalItem, // Always save the original casing\r\n            quantity: li.dataset.quantity,\r\n            unit: li.dataset.unit,\r\n            category: li.dataset.category,\r\n            check: li.dataset.checked\r\n        };\r\n    });\r\n\r\n    localStorage.setItem('myShoppingList', JSON.stringify(shoppingList));\r\n}\r\n\r\nfunction loadShoppingListFromLocalStorage() {\r\n    const storedListJSON = localStorage.getItem('myShoppingList');\r\n\r\n    if (storedListJSON) {\r\n        try {\r\n            const storedList = JSON.parse(storedListJSON); // Parse directly into a local variable\r\n\r\n   \r\n            List.innerHTML = ''; \r\n            storedList.forEach(itemData => {\r\n                let listItem = document.createElement('li');\r\n                listItem.className = 'list-group-item fs-5 mb-3 rounded-3';\r\n                listItem.dataset.item = itemData.item.toUpperCase(); \r\n                listItem.dataset.originalItem = itemData.item; \r\n                listItem.dataset.quantity = itemData.quantity;\r\n                listItem.dataset.unit = itemData.unit;\r\n                listItem.dataset.category = itemData.category || 'Other';\r\n                listItem.dataset.checked = itemData.check; // Ensure boolean is stored as string\r\n                List.appendChild(listItem);\r\n            });\r\n            updateItemNumbers(); \r\n        } catch (e) {\r\n            console.error('Error parsing shopping list from localStorage:', e);\r\n            localStorage.removeItem('myShoppingList'); \r\n            List.innerHTML = ''; \r\n        }\r\n    } else {\r\n        console.log('No shopping list found in local storage. Starting with an empty list.');\r\n        List.innerHTML = ''; y\r\n    }\r\n}\r\n\r\n// Event listener to save the list when the page is about to be unloaded\r\ndocument.addEventListener('visibilitychange', () => {\r\n  if (document.visibilityState === 'hidden') {\r\n    saveShoppingListToLocalStorage();\r\n  }\r\n});\r\n\r\n// Fallback\r\nwindow.addEventListener('beforeunload', saveShoppingListToLocalStorage);\r\n\r\n// Load the shopping list when the DOM content is fully loaded\r\ndocument.addEventListener('DOMContentLoaded', loadShoppingListFromLocalStorage);"],"names":["saveShoppingListToLocalStorage","shoppingList","list_items_dom","Array","from","list_items","map","li","item","dataset","originalItem","quantity","unit","category","check","checked","localStorage","setItem","JSON","stringify","loadShoppingListFromLocalStorage","storedListJSON","getItem","storedList","parse","List","innerHTML","forEach","itemData","listItem","document","createElement","className","toUpperCase","appendChild","updateItemNumbers","e","console","error","removeItem","log","y","addEventListener","visibilityState","window"],"version":3,"file":"list.62633a69.js.map"}